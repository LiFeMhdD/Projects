# Welcome to Assignment #2 written by Mofei Hou
#In this assignment we will be discussing 
#Economic Policy Uncertainity and also
# Consumer Confidence when looking at three seperate economies.
# I will be spliting all the coding section into three seperate 
#sections, because we will be exploring three different states.
# The countries that I will be exploring are: 1) United Kingdom
# 2) USA, and 3) Japan. 
# 
#
# Let us first start with the United Kingdom analysis.
# Before we start, we should first make sure that the global 
# environment is clear.


rm(list=ls())

# Let us know set the working directory for the assignment:

setwd("C:/Users/Murphy Hou/Documents/School Coding/Introduction to Statistical Programming/Assignment/Assignment # 2/")

# We will now load all the packages that we will use
#during the course of this assignment.

# The Librarys that will we use:
library(moments)

# Here are some functions that we are using in
# the anaylsis.

#We will now load the first set of data: In the United Kingdom section,
#we will load 3 sets of data:
# 1) FTSE 100 monthly data
# 2) We will have the Economic Policy Uncertainty Set
# 3) Consumer Confidence Metrics

data1 <- read.csv("UK_Data.csv", header=TRUE)

# We must now make sure that we
# create a variable to store all the dates.

dates <- data1[,1]

# we will now load all the data as numeric in a 
#matrix

data1 <- data1[,2:NCOL(data1)]

data1<- apply(data1, 2, as.numeric)

#We should now put back the dates into the matrix

rownames(data1) <- dates

#Let us start with the Exploratory Data Analysis

# We are creating date objects within the Date 
#Variables

dates <- as.Date(dates)

# Let us Plot all the graph

par(mfrow=c(1,3))
  for (i in 1:NCOL(data1))
  {
    plot(dates, data1[,i], type="l", main = colnames(data1)[i], xlab= "Time",
         ylab="Values", col="blue", lwd=3, lty=1)
  }
par(mfrow=c(1,1))
  
#Let us check the ACF
# This is to check for persistence
#It seems there is some persistence in the variables past the 
#first lag

acf(data1[,1])
acf(data1[,2])
acf(data1[,3])

# We must do the PP.Test now to find if the variables are stationary.
#all three conditions must hold
#1) the mean should be constant
#2) There should be a finite variance
#3) autocorrelations should only depend on lag and not time.

#FTSE 100 is not-stationary
# Not stationary as the p-value is 0.4094, 
PP.test(data1[,1])

#The Economic Policy Uncertainty Index is stationary
# p-value 0.01
PP.test(data1[,2])

#Consumer Confidence Index is not stationary
#p-value of 0.8213
PP.test(data1[,3])

# Now that we found aspect of the data are not stationary
# what is the next step?
# we must transform the data by looking at the 
#percentage return instead of just pure return.
# since, we cannot gather any useful analysis from non-stationary 
# datasets.


# We observe that the majority of the variables are not stationary
# so what do we do?
# Let us first  split the Y and X:

Y <- data1[,1]

X <- data1[,2:NCOL(data1)]

# Y is the stock prices, so we take the log returns

y <- diff(log(Y))

# We can simply take the first difference because we are 
#dealing with prices.


x <- diff(X)

# We will check for Unit-Root again. All p-values are at 0.01, 
#which means, we are stationary.


PP.test(y)

PP.test(x[,1])

PP.test(x[,2])

# we make scatterplots now

# Let us make for EPU first

i <- 1

plot(x[,i], y, col="blue", main=colnames(x)[i], ylab="Log returns of FTSE",
     xlab="EPU values")

output_uk_EPU <- lm(y~x[,i])

abline(output_uk_EPU,col= "red")

#Let us make for CCI now:

i <- 2

plot(x[,i], y, col="blue", main=colnames(x)[i], ylab="Log Returns of FTSE"
     , xlab="CCI Values")

output_uk_CCI <- lm(y~x[,i])

abline(output_uk_CCI,col= "red")

#Let us now make nice graph showcasing the relationship between the 
# dependent and the two independent variables

par(mfrow=c(1,2))
  for (i in 1:NCOL(x))
  {
    plot(x[,i], y, col="blue", main=colnames(x)[i], ylab="Log returns of FTSE",
         xlab="values")
    
    output_uk_all <- lm(y~x[,i])
    
    abline(output_uk_all,col= "red")
  }
par(mfrow=c(1,1))

#Final Step, we must now find the contemporaneous multiple regression
# and the lead/lag relationship.

#make a contemporaneous multiple regression:
N <- NROW(y)

iy <- 1:N

ix <- 1:N

output<- lm(y[iy]  ~ x[ix,])

summary(output)

# Let us export the data into a nice excel
#csv file first

write.csv(as.data.frame(summary(output)$coef), "Summary_Regression_Information_UK.csv")

#estimating a one-step ahead lead/lag relationship:
s <- 1

ix_new <- 1:(N-s)

iy_new <- (s+1):N

output_new <- lm(y[iy_new] ~ x[ix_new,])

summary(output_new)

#Exporting the output coefficient into a 
#csv file
write.csv(as.data.frame(summary(output_new)$coef), "Lead_Lag_Information_UK.csv")

#Therefore, we will have an immediate effect in the stock market, 
#when policy changes occur. These variables do not reflect a 
# lead/lag relationship. 

#Let us now set our sets to the USA datasets:
# I will be using the same factors for independent variables:
# 1) EPU
# 2) CCI
# For the dependent variable, I have chosen the stock market index:
# 3) NASDAQ

# The same steps will occur:
data2 <- read.csv("USA_Data.csv", header=TRUE)

# We must now make sure that we
# create a variable to store all the dates.

dates2 <- data2[,1]



# we will now load all the data as numeric in a 
#matrix

data2 <- data2[,2:NCOL(data2)]

data2<- apply(data2, 2, as.numeric)

#We should now put back the dates into the matrix

rownames(data2) <- dates2
#Time to remove the NA's(which is the final row)

# We are creating date objects within the Date 
#Variables

dates2 <- as.Date(dates2)

# Let us Plot all the graph

par(mfrow=c(1,3))
for (i in 1:NCOL(data2))
{
  plot(dates2, data2[,i], type="l", main = colnames(data2)[i], xlab= "Time",
       ylab="Values", col="blue", lwd=3, lty=1)
}
par(mfrow=c(1,1))

#remove na's

data2 <- na.omit(data2)

#Let us check the ACF
# This is to check for persistence
#It seems there is some persistence in the variables past the 
#first lag

acf(data2[,1])
acf(data2[,2])
acf(data2[,3])

# We must do the PP.Test now to find if the variables are stationary.
#all three conditions must hold
#1) the mean should be constant
#2) There should be a finite variance
#3) autocorrelations should only depend on lag and not time.

#NASDAQ is not-stationary
# Not stationary as the p-value is 0.99, 
PP.test(data2[,1])

#The Economic Policy Uncertainty Index is stationary
# p-value 0.02208
PP.test(data2[,2])

#Consumer Confidence Index is not stationary
#p-value of 0.8896
PP.test(data2[,3])

# Now that we found aspect of the data are not stationary
# what is the next step?
# we must transform the data by looking at the 
#percentage return instead of just pure return.
# since, we cannot gather any useful analysis from non-stationary 
# datasets.


# We observe that the majority of the variables are not stationary
# so what do we do?
# Let us first  split the Y and X:

Y1 <- data2[,1]

X1 <- data2[,2:NCOL(data2)]

# Y is the stock prices, so we take the log returns

y1 <- diff(log(Y1))

# We can simply take the first difference because we are 
#dealing with prices.


x1 <- diff(X1)

# We will check for Unit-Root again. All p-values are at 0.01, 
#which means, we are stationary.

PP.test(y1)

PP.test(x1[,1])

PP.test(x1[,2])

# we make scatterplots now

# Let us make for EPU first

i <- 1

plot(x1[,i], y1, col="blue", main=colnames(x1)[i], ylab="Log returns of NASDAQ",
     xlab="EPU values")

output_usa_EPU <- lm(y1~x1[,i])

abline(output_usa_EPU,col= "red")

#Let us make for CCI now:

i <- 2

plot(x1[,i], y1, col="blue", main=colnames(x1)[i], ylab="Log Returns of NASDAQ"
     , xlab="CCI Values")

output_usa_CCI <- lm(y1~x1[,i])

abline(output_usa_CCI,col= "red")

#Let us now make nice graph showcasing the relationship between the 
# dependent and the two independent variables

par(mfrow=c(1,2))
for (i in 1:NCOL(x1))
{
  plot(x1[,i], y1, col="blue", main=colnames(x1)[i], ylab="Log returns of NASDAQ",
       xlab="values")
  
  output_usa_all <- lm(y1~x1[,i])
  
  abline(output_usa_all, col= "red")
}
par(mfrow=c(1,1))

#Final Step, we must now find the contemporaneous multiple regression
# and the lead/lag relationship.

#make a contemporaneous multiple regression:
N1 <- NROW(y1)

iy1 <- 1:N1

ix1 <- 1:N1

output1<- lm(y1[iy1]  ~ x1[ix1,])

summary(output1)

# Let us export the data into a nice excel
#csv file first

write.csv(as.data.frame(summary(output1)$coef), "Summary_Regression_Information_USA.csv")

#estimating a one-step ahead lead/lag relationship:
s1 <- 1

ix_new1 <- 1:(N1-s1)

iy_new1 <- (s1+1):N1

output_new1 <- lm(y1[iy_new1] ~ x[ix_new1,])

summary(output_new1)

#Exporting the output coefficient into a 
#csv file
write.csv(as.data.frame(summary(output_new1)$coef), "Lead_Lag_Information_USA.csv")

#Therefore, we will have an immediate effect in the stock market, 
#when policy changes occur. These variables do not reflect a 
# lead/lag relationship. 

#Let us now look at our final data set from Japan:
# I will be using the same factors for independent variables:
# 1) EPU
# 2) CCI
# For the dependent variable, I have chosen the stock market index:
# 3) NIKKEI 225

# The same steps will occur:
data3 <- read.csv("Japan_Data.csv", header=TRUE)

# We must now make sure that we
# create a variable to store all the dates.

dates3 <- data3[,1]



# we will now load all the data as numeric in a 
#matrix

data3 <- data3[,2:NCOL(data3)]

data3<- apply(data3, 2, as.numeric)

#We should now put back the dates into the matrix

rownames(data3) <- dates3
#Time to remove the NA's(which is the final row)

# We are creating date objects within the Date 
#Variables

dates3 <- as.Date(dates3)

# Let us Plot all the graph

par(mfrow=c(1,3))
for (i in 1:NCOL(data3))
{
  plot(dates3, data3[,i], type="l", main = colnames(data3)[i], xlab= "Time",
       ylab="Values", col="blue", lwd=3, lty=1)
}
par(mfrow=c(1,1))

#remove na's

data3 <- na.omit(data3)

#Let us check the ACF
# This is to check for persistence
#It seems there is some persistence in the variables past the 
#first lag

acf(data3[,1])
acf(data3[,2])
acf(data3[,3])

# We must do the PP.Test now to find if the variables are stationary.
#all three conditions must hold
#1) the mean should be constant
#2) There should be a finite variance
#3) autocorrelations should only depend on lag and not time.

#NASDAQ is not-stationary
# Not stationary as the p-value is 0.2929, 
PP.test(data3[,1])

#The Economic Policy Uncertainty Index is stationary
# p-value 0.01
PP.test(data3[,2])

#Consumer Confidence Index is not stationary
#p-value of 0.6122
PP.test(data3[,3])

# Now that we found aspect of the data are not stationary
# what is the next step?
# we must transform the data by looking at the 
#percentage return instead of just pure return.
# since, we cannot gather any useful analysis from non-stationary 
# datasets.


# We observe that the majority of the variables are not stationary
# so what do we do?
# Let us first  split the Y and X:

Y2 <- data3[,1]

X2 <- data3[,2:NCOL(data3)]

# Y is the stock prices, so we take the log returns

y2 <- diff(log(Y2))

# We can simply take the first difference because we are 
#dealing with prices.


x2 <- diff(X2)

# We will check for Unit-Root again. All p-values are at 0.01, 
#which means, we are stationary.

PP.test(y2)

PP.test(x2[,1])

PP.test(x2[,2])

# we make scatterplots now

# Let us make for EPU first

i <- 1

plot(x2[,i], y2, col="blue", main=colnames(x2)[i], ylab="Log returns of NIKKEI",
     xlab="EPU values")

output_japan_EPU <- lm(y2~x2[,i])

abline(output_japan_EPU,col= "red")

#Let us make for CCI now:

i <- 2

plot(x2[,i], y2, col="blue", main=colnames(x2)[i], ylab="Log Returns of NIKKEI"
     , xlab="CCI Values")

output_japan_CCI <- lm(y2~x2[,i])

abline(output_japan_CCI,col= "red")

#Let us now make nice graph showcasing the relationship between the 
# dependent and the two independent variables

par(mfrow=c(1,2))
for (i in 1:NCOL(x2))
{
  plot(x2[,i], y2, col="blue", main=colnames(x2)[i], ylab="Log returns of NIKKEI",
       xlab="values")
  
  output_japan_all <- lm(y2~x2[,i])
  
  abline(output_japan_all, col= "red")
}
par(mfrow=c(1,1))

#Final Step, we must now find the contemporaneous multiple regression
# and the lead/lag relationship.

#make a contemporaneous multiple regression:
N2 <- NROW(y2)

iy2 <- 1:N2

ix2 <- 1:N2

output2<- lm(y2[iy2]  ~ x2[ix2,])

summary(output2)

# Let us export the data into a nice excel
#csv file first

write.csv(as.data.frame(summary(output2)$coef), "Summary_Regression_Information_Japan.csv")

#estimating a one-step ahead lead/lag relationship:
s2 <- 1

ix_new2 <- 1:(N2-s2)

iy_new2 <- (s2+1):N2

output_new2 <- lm(y2[iy_new2] ~ x2[ix_new2,])

summary(output_new2)

#Exporting the output coefficient into a 
#csv file
write.csv(as.data.frame(summary(output_new2)$coef), "Lead_Lag_Information_Japan.csv")

#Therefore, we will have an immediate effect in the stock market, 
#when policy changes occur. These variables do not reflect a 
# lead/lag relationship. 


#This concludes the coding sections of Assignment #2.

# I appreciate the feedback, and look forward to writing the next assignment.

#Mofei Hou
#KCL MSc Candidate in Global Finance Analytics.




