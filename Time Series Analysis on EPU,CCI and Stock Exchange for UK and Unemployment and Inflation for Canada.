# Welcome to the Final R Based Project of this Course.
# Once again it is absolute pleasure to present the 
# code for this final project based on Basic Univariate
# Time Series Analysis.

# For the datasets that we will be using for the data, 
# I will be examining the CPI and Unemployment rate of Canada
# also the final three variables with be related to 
# the Stock Market Prices, EPU, and CCI for 
# the United Kingdom.

#Before we begin, we must first clear the Environment
 
rm(list=ls())

#Next let us set the working directory for our assignment.

setwd("C:/Users/Murphy Hou/Documents/School Coding/Introduction to Statistical Programming/Assignment/Assignment # 3/")

#Let us now install the packages needed to provide a detailed
# Time-Series Analysis.

library("lmtest") # This package will allow us to do further coef testing
                  # Use this for coeftest()

library("forecast") # Use this for auto.arima()

library("tseries") # use this for adf.test()

#Next: let us extract the data from the CSV file.

data1 <- read.csv("UK_Data.csv", header=TRUE)

# We must now make sure that we
# create a variable to store all the dates.

dates <- data1[,1]

# we will now load all the data as numeric in a 
#matrix

data1 <- data1[,2:NCOL(data1)]

data1<- apply(data1, 2, as.numeric)

#We should now put back the dates into the matrix

rownames(data1) <- dates

#Let us start with the Exploratory Data Analysis

# We are creating date objects within the Date 
#Variables

dates <- as.Date(dates)

#Pull out all data:

y <- data1[,1]
yname<- "The United Kingdom, FTSE Exchange"

y1<-data1[,2]
yname1<- "The United Kingdom, Economic Policy Uncertainty"

y2<-data1[,3]
yname2 <- "The United Kingdom, Consumer Confidence Index"

#Make a Plot of all three.
#FTSE
plot(dates, y, type="l", lwd=2, main=yname)

#EPU
plot(dates, y1, type="l", lwd=2, main=yname1)

#CCI
plot(dates, y2, type="l", lwd=2, main=yname2)

#We can make a plot to review the factors together:

par(mfrow=c(1,3))
  for (i in 1:NCOL(data1))
  {
    plot(dates, data1[,i], type="l", main = colnames(data1)[i], xlab= "Time",
         ylab="Values", col="blue", lwd=3, lty=1)
  }
par(mfrow=c(1,1))



#check acf
#FTSE
acf(y)

#EPU
acf(y1)

#CCI
acf(y2)


#Check data set is non-stationary.
#instead of PP.test we will be using adf.test()
# it is a much more precise test, 
# the full name of the test is the
# augmented Dickey-Fuller test
# where Ho: Series has a unit-root(non-stationary)
# Ha: stationary

adf.test(y)
#p-value for FTSE is 0.5597, this would suggest that there is a unit-root

adf.test(y1)
#p-value for EPU is 0.03455, this suggests that we can reject the null
#with 95% confidence.

adf.test(y2)
#p-value for CCI is 0.57, this suggests that there is a unit-root.

# With this information we must transform the data into all stationary variables.

# the reason we take first difference with EPU although it is stationary is because
# we want a more precise comparsion, with the same units.

#The transformation for CCI and EPU are straight forward first difference 
#calculations.

x <- diff(log(y))

x1 <- diff(y1)

x2 <- diff(y2)

#re-set the dates after transformations

xdates <- dates[2:NROW(dates)]

# Make the plots again this time after the transformation
#FTSE
plot(xdates, x, type="l", lwd=2, main=yname)

#EPU
plot(xdates, x1, type="l", lwd=2, main=yname1)

#CCI
plot(xdates, x2, type="l", lwd=2, main=yname2)

#we should run the adf.test again to check to see if we can reject the null
#for all variables

adf.test(x)

#p-value for FTSE is 0.01, the variable is now stationary

adf.test(x1)

#p-value for EPU is 0.01, we can reject the null(Stationary)

adf.test(x2)

#p-value for CCI is 0.1797, better but we still fail to reject the NULL.
# The dataset is still not stationary.

#The second transformation is done to make sure that 
#all variables are now stationary.
#FTSE, log returns
x_new <- diff(x)

#EPU
x1_new <- diff(x1)

#CCI
x2_new <- diff(x2)

#re-set the dates after transformations

xdates_new <- xdates[2:NROW(xdates)]

adf.test(x_new)#FTSE

adf.test(x1_new)#EPU

adf.test(x2_new)#CCI

#all p-values are now at 0.01, which means we can see they are stationary.

#we now check ACF/PACF for an eye test to see which stationary model fits.

#FTSE
par(mfrow=c(1,2)) # This command creat a space to make both plots with 1 row and 2 columns
# this means that the plots will be made one next to the other
  acf(x_new)
  
  pacf(x_new)
par(mfrow=c(1,1)) #make the space with unique plot again
#based on the eye test we can see that MA(1) and AR(6),
# are some of the possible outcomes, for FTSE. 
# but what is the best?
# we can see the auto.arima to find the best model for the dataset

out_est <- auto.arima(x_new, max.p=8, max.q=8, ic="aicc")
out_est1 <- auto.arima(x_new, max.p=8, max.q=8, ic="aic")
out_est2 <- auto.arima(x_new, max.p=8, max.q=8, ic="bic")

#let us look at a coeftest:
coeftest(out_est)
coeftest(out_est1)
coeftest(out_est2)

#It seems that the auto-arima function has presented the best model for FTSE
# to be an AR model with 6 lags or AR(6).

#let us now check the next two

#EPU
par(mfrow=c(1,2))
  acf(x1_new)
  
  pacf(x1_new)
par(mfrow=c(1,1))
#based on eye test we can see MA(1) or AR(4)
#Let us now make sure the results are consistent

out_est_EPU <- auto.arima(x1_new, max.p=8, max.q=8, ic="aicc")
out_est_EPU1 <- auto.arima(x1_new, max.p=8, max.q=8, ic="aic")
out_est_EPU2 <- auto.arima(x1_new, max.p=8, max.q=8, ic="bic")

#let us take a look at the coeftest

coeftest(out_est_EPU)
coeftest(out_est_EPU1)
coeftest(out_est_EPU2)

#based on results from the auto.arima function, the best model to fit in the EPU
#series is AR(4)

#CCI
par(mfrow=c(1,2))
  acf(x2_new)
  
  pacf(x2_new)
par(mfrow=c(1,1))
#based on the eye test we can either go with the MA(4) or AR(3)

#But what is the best model, we must use the auto.arima to find out

out_est_CCI <- auto.arima(x2_new, max.p=8, max.q=8, ic="aicc")
out_est_CCI1 <- auto.arima(x2_new, max.p=8, max.q=8, ic="aic")
out_est_CCI2 <- auto.arima(x2_new, max.p=8, max.q=8, ic="bic")

#let us now check the summary


coeftest(out_est_CCI)
coeftest(out_est_CCI1)
coeftest(out_est_CCI2)

#It seems that the optimal model is neither MA(4) or AR(3)
# The "best" model in this situation according the the AICC is ARMA(2,1).

#we can use the function forecast() on our estimation output
# to get an idea of what the forecasts from these will be for the next period.

#Since, we are operating in months for our analysis, the next period will be 
# the next full year for forecasts.
h_max <- 12 

#FTSE
plot(forecast(out_est, h=h_max))
plot(forecast(out_est1, h=h_max))
plot(forecast(out_est2, h=h_max))

#EPU
plot(forecast(out_est_EPU, h=h_max))
plot(forecast(out_est_EPU1, h=h_max))
plot(forecast(out_est_EPU2, h=h_max))

#CCI
plot(forecast(out_est_CCI, h=h_max))
plot(forecast(out_est_CCI1, h=h_max))
plot(forecast(out_est_CCI2, h=h_max))


# We can now load our Canadian Data, and do the similar analysis

data2 <- read.csv("Canada_Data.csv", header=TRUE)

# We must now make sure that we
# create a variable to store all the dates.

dates1 <- data2[,1]

# we will now load all the data as numeric in a 
#matrix

data2 <- data2[,2:NCOL(data2)]

data2<- apply(data2, 2, as.numeric)

#We should now put back the dates into the matrix

rownames(data2) <- dates1

#Let us start with the Exploratory Data Analysis

# We are creating date objects within the Date 
#Variables

dates1 <- as.Date(dates1)

#Pull out all data:
#the initial letter c denotes Canadian variables

cy <- data2[,1]
cyname<- "Canada, Unemployment Rate"

cy1<-data2[,2]
cyname1<- "Canada, Consumer Price Index"

# Let us make plots for these variables first:

#Unemployment Rate
plot(dates1, cy, type="l", lwd=2, main=cyname)

#CPI
plot(dates1, cy1, type="l", lwd=2, main=cyname1)

# we can make a side by side plot:

par(mfrow=c(1,2)) # This command creat a space to make both plots with 1 row and 2 columns
# this means that the plots will be made one next to the other
for(i in 1:NCOL(data2))
{
  plot(dates1, data2[,i], type="l", main = colnames(data2)[i], xlab="Time", 
       ylab="Values", col="blue",lwd = 3, lty = 1 )
}
par(mfrow=c(1,1)) #make the space with unique plot again

#Time to do an initial check on ACF.
#Unemployment Rate
acf(cy)

#CPI
acf(cy1)

# let us now use the adf.test to find out whether or not the series is stationary


#Ho: there is a unit root
#Ha: Stationary

#Unemployment Rate
adf.test(cy)

#p-value is 0.1141, fail to reject at the 90% level, meaning there is a higher
#possibility there exists an unit-root

#CPI
adf.test(cy1)
#p-value is 0.01, reject NULL, series is stationary.

#We must now transform the data, because there is at least one variable
#that seems to be not stationary.

#since we are not working with any stock prices, taking the first
#difference is sufficient.
#Unemployment Rate
cx <- diff(cy)


#CPI
cx1 <- diff(cy1)

cdates <- dates1[2:NROW(dates1)]

#let us redo the adf.test

#Unemployment Rate
adf.test(cx)

#CPI
adf.test(cx1)

#After the first transformation, we got p-values of both 0.01.
#Both Series are now stationary.

# let check out the PACF and ACF of the newly transformed model
# eye test to see which one may be a good fit

#unemployment Rate
par(mfrow=c(1,2))
  acf(cx)
  
  pacf(cx)
par(mfrow=c(1,1))
#The eye test seems to suggest either an MA(1) or AR(2)
#let us now do auto arima with AICC, AIC, and BIC to find out 
#which could be the "best" model for this series

out_est_C_UR <- auto.arima(cx, max.p=8, max.q=8, ic="aicc")
out_est_C_UR1 <- auto.arima(cx, max.p=8, max.q=8, ic="aic")
out_est_C_UR2 <- auto.arima(cx, max.p=8, max.q=8, ic="bic")

# let us check the coeftest
coeftest(out_est_C_UR)
coeftest(out_est_C_UR1)
coeftest(out_est_C_UR2)

#All three IC suggests that the "best" model is a MA(1).

#Let us check for the CPI now
par(mfrow=c(1,2))
  acf(cx1)
  
  pacf(cx1)
par(mfrow=c(1,1))
#From the eye test both MA(1) or AR(1) seems to work well.

#let us now use auto arima to find out what is the "best" model that
#fits this series.

out_est_C_CPI <- auto.arima(cx1, max.p=8, max.q=8, ic="aicc")
out_est_C_CPI1 <- auto.arima(cx1, max.p=8, max.q=8, ic="aic")
out_est_C_CPI2 <- auto.arima(cx1, max.p=8, max.q=8, ic="bic")

#let us check the coeftest

coeftest(out_est_C_CPI)
coeftest(out_est_C_CPI1)
coeftest(out_est_C_CPI2)

# All three of the CI setting suggest that in this case the MA(1) is
# the best model

#Since all the data for Canada is also in monthly, 
#if we forecast for the next year, there will be 12 periods.
# we will use the same h_max as above.

#Unemployment Rate
plot(forecast(out_est_C_UR , h= h_max))
plot(forecast(out_est_C_UR1, h= h_max))
plot(forecast(out_est_C_UR2, h= h_max))

#CPI
plot(forecast(out_est_C_CPI, h= h_max))
plot(forecast(out_est_C_CPI1, h= h_max))
plot(forecast(out_est_C_CPI2, h= h_max))


#Since all three CI gave the same results, 
#the forecast graphs will be similar for each case.

#This concludes the coding portion of this assignment

#Thank you for taking the time to review the code
#for the final R based project
#It was my Absolute pleasure to learn how to code in 
#R
#Hope to see you in the next module!

#Best Regards,

#Mofei Hou
